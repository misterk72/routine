// Generated by view binder compiler. Do not edit!
package com.healthtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.healthtracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddEntryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextInputEditText notesEditText;

  @NonNull
  public final TextInputLayout notesLayout;

  @NonNull
  public final MaterialButton saveButton;

  @NonNull
  public final TextInputEditText timestampEditText;

  @NonNull
  public final TextInputLayout timestampLayout;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextInputEditText waistEditText;

  @NonNull
  public final TextInputLayout waistLayout;

  @NonNull
  public final TextInputEditText weightEditText;

  @NonNull
  public final TextInputLayout weightLayout;

  private ActivityAddEntryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextInputEditText notesEditText, @NonNull TextInputLayout notesLayout,
      @NonNull MaterialButton saveButton, @NonNull TextInputEditText timestampEditText,
      @NonNull TextInputLayout timestampLayout, @NonNull Toolbar toolbar,
      @NonNull TextInputEditText waistEditText, @NonNull TextInputLayout waistLayout,
      @NonNull TextInputEditText weightEditText, @NonNull TextInputLayout weightLayout) {
    this.rootView = rootView;
    this.notesEditText = notesEditText;
    this.notesLayout = notesLayout;
    this.saveButton = saveButton;
    this.timestampEditText = timestampEditText;
    this.timestampLayout = timestampLayout;
    this.toolbar = toolbar;
    this.waistEditText = waistEditText;
    this.waistLayout = waistLayout;
    this.weightEditText = weightEditText;
    this.weightLayout = weightLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notesEditText;
      TextInputEditText notesEditText = ViewBindings.findChildViewById(rootView, id);
      if (notesEditText == null) {
        break missingId;
      }

      id = R.id.notesLayout;
      TextInputLayout notesLayout = ViewBindings.findChildViewById(rootView, id);
      if (notesLayout == null) {
        break missingId;
      }

      id = R.id.saveButton;
      MaterialButton saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.timestampEditText;
      TextInputEditText timestampEditText = ViewBindings.findChildViewById(rootView, id);
      if (timestampEditText == null) {
        break missingId;
      }

      id = R.id.timestampLayout;
      TextInputLayout timestampLayout = ViewBindings.findChildViewById(rootView, id);
      if (timestampLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.waistEditText;
      TextInputEditText waistEditText = ViewBindings.findChildViewById(rootView, id);
      if (waistEditText == null) {
        break missingId;
      }

      id = R.id.waistLayout;
      TextInputLayout waistLayout = ViewBindings.findChildViewById(rootView, id);
      if (waistLayout == null) {
        break missingId;
      }

      id = R.id.weightEditText;
      TextInputEditText weightEditText = ViewBindings.findChildViewById(rootView, id);
      if (weightEditText == null) {
        break missingId;
      }

      id = R.id.weightLayout;
      TextInputLayout weightLayout = ViewBindings.findChildViewById(rootView, id);
      if (weightLayout == null) {
        break missingId;
      }

      return new ActivityAddEntryBinding((CoordinatorLayout) rootView, notesEditText, notesLayout,
          saveButton, timestampEditText, timestampLayout, toolbar, waistEditText, waistLayout,
          weightEditText, weightLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
